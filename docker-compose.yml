services:
  catvision:
    build: .
    image: catvision:cpu
    container_name: catvision
    depends_on:
      - framegrab
    environment:
      - GLOG_minloglevel=2
      - C10_LOG_LEVEL=ERROR
      - TORCH_CPP_LOG_LEVEL=ERROR
      - CAFFE2_LOG_LEVEL=ERROR
      - PYTHONWARNINGS=ignore::UserWarning
      - OMP_NUM_THREADS=3
      - MKL_NUM_THREADS=3
      - YOLO_CONFIG_DIR=/app/.ultralytics
    volumes:
      - ./samples:/app/samples
      - ./frames:/app/frames
      - ./frames_labeled:/app/frames_labeled
      - ./crops:/app/crops
      - ./cats:/app/cats
      - ./meta:/app/meta
      - ./predictions:/app/predictions
    framegrab:
      image: jrottenberg/ffmpeg:6-slim
      container_name: framegrab
      restart: unless-stopped
      env_file: .env
      # Write JPEGs into the same `samples/` bind mount the app uses
      volumes:
        - ./samples:/work/samples
      working_dir: /work
      command: >
        -nostdin -rtsp_transport tcp
        -i "${CAMERA_URL}"
        -vf fps=${CAP_FPS}
        -q:v ${JPEG_QUALITY}
        -f image2 -strftime 1
        "samples/%Y%m%d_%H%M%S.jpg"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '3.5'
    restart: unless-stopped
volumes:
  catvision_ultra:
